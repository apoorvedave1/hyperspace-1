TakeOrderedAndProject [w_state,i_item_id,sales_before,sales_after]
  WholeStageCodegen
    HashAggregate [w_state,sum,i_item_id,sum,sum(CASE WHEN (d_date < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)) ELSE 0.00 END),sum(CASE WHEN (d_date >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)) ELSE 0.00 END)] [sales_before,sales_after,sum,sum,sum(CASE WHEN (d_date < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)) ELSE 0.00 END),sum(CASE WHEN (d_date >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)) ELSE 0.00 END)]
      InputAdapter
        Exchange [w_state,i_item_id] #1
          WholeStageCodegen
            HashAggregate [sum,w_state,d_date,sum,cs_sales_price,cr_refunded_cash,i_item_id,sum,sum] [sum,sum,sum,sum]
              Project [cr_refunded_cash,w_state,i_item_id,d_date,cs_sales_price]
                BroadcastHashJoin [cs_sold_date_sk,d_date_sk]
                  Project [cr_refunded_cash,cs_sold_date_sk,w_state,i_item_id,cs_sales_price]
                    BroadcastHashJoin [cs_item_sk,i_item_sk]
                      Project [cr_refunded_cash,cs_item_sk,cs_sold_date_sk,w_state,cs_sales_price]
                        BroadcastHashJoin [cs_warehouse_sk,w_warehouse_sk]
                          Project [cs_warehouse_sk,cr_refunded_cash,cs_item_sk,cs_sold_date_sk,cs_sales_price]
                            BroadcastHashJoin [cs_order_number,cs_item_sk,cr_order_number,cr_item_sk]
                              Project [cs_warehouse_sk,cs_item_sk,cs_sold_date_sk,cs_sales_price,cs_order_number]
                                Filter [cs_warehouse_sk,cs_item_sk,cs_sold_date_sk]
                                  Scan parquet default.catalog_sales [cs_warehouse_sk,cs_item_sk,cs_sold_date_sk,cs_sales_price,cs_order_number] [cs_warehouse_sk,cs_item_sk,cs_sold_date_sk,cs_sales_price,cs_order_number]
                              InputAdapter
                                BroadcastExchange #2
                                  WholeStageCodegen
                                    Project [cr_item_sk,cr_order_number,cr_refunded_cash]
                                      Filter [cr_order_number,cr_item_sk]
                                        Scan parquet default.catalog_returns [cr_item_sk,cr_order_number,cr_refunded_cash] [cr_item_sk,cr_order_number,cr_refunded_cash]
                          InputAdapter
                            BroadcastExchange #3
                              WholeStageCodegen
                                Project [w_warehouse_sk,w_state]
                                  Filter [w_warehouse_sk]
                                    Scan parquet default.warehouse [w_warehouse_sk,w_state] [w_warehouse_sk,w_state]
                      InputAdapter
                        BroadcastExchange #4
                          WholeStageCodegen
                            Project [i_item_sk,i_item_id]
                              Filter [i_current_price,i_item_sk]
                                Scan parquet default.item [i_item_sk,i_item_id,i_current_price] [i_item_sk,i_item_id,i_current_price]
                  InputAdapter
                    BroadcastExchange #5
                      WholeStageCodegen
                        Project [d_date_sk,d_date]
                          Filter [d_date,d_date_sk]
                            Scan parquet default.date_dim [d_date_sk,d_date] [d_date_sk,d_date]
